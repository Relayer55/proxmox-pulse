{
  "baseUrl": "http://localhost:7654",
  "outputDir": "../../docs/images",
  "mockData": {
    "enabled": true,
    "mockDataUrl": "http://localhost:7656",
    "setupScript": "window.localStorage.setItem('use_mock_data', 'true'); window.localStorage.setItem('MOCK_DATA_ENABLED', 'true'); localStorage.removeItem('mock_enabled'); localStorage.removeItem('MOCK_SERVER_URL'); localStorage.removeItem('MOCK_DATA'); console.log('Server-side mock data flags set in localStorage');"
  },
  "screenshots": [
    {
      "path": "/resources",
      "name": "dashboard",
      "viewportSize": {
        "width": 1440,
        "height": 900
      },
      "waitForSelector": "#root",
      "lightModeOnly": true,
      "waitForTimeout": 5000,
      "enableFilters": false
    },
    {
      "path": "/resources",
      "name": "dashboard-dark-compact",
      "viewportSize": {
        "width": 1440,
        "height": 900
      },
      "waitForSelector": "#root",
      "theme": "dark",
      "waitForTimeout": 5000,
      "enableFilters": false,
      "beforeScreenshot": "// Try multiple methods to enable compact mode\nlocalStorage.setItem('pulse_compact_mode', 'true');\nlocalStorage.setItem('compact_mode', 'true');\nlocalStorage.setItem('app_compact_mode', 'true');\n\n// Set dark mode\nlocalStorage.setItem('app_dark_mode', JSON.stringify(true));\n\n// Try to find and click compact mode toggle if it exists\nconst compactButtons = [\n  ...document.querySelectorAll('button[title*=\"compact\" i], button[aria-label*=\"compact\" i]'),\n  ...Array.from(document.querySelectorAll('button')).filter(btn => btn.textContent?.toLowerCase().includes('compact')),\n  ...document.querySelectorAll('.compact-toggle, [data-testid=\"compact-toggle\"]')\n];\n\nif (compactButtons.length > 0) {\n  console.log('Found compact mode button, clicking it');\n  compactButtons[0].click();\n}\n\n// Set compact mode attributes on document\ndocument.documentElement.setAttribute('data-compact-mode', 'true');\ndocument.body.classList.add('compact-mode');\n\n// Force any React components to update if possible\nif (window.dispatchEvent) {\n  window.dispatchEvent(new Event('storage'));\n  window.dispatchEvent(new Event('resize'));\n}"
    }
  ]
} 