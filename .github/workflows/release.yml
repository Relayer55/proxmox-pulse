name: Create Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write # Needed to create releases

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Explicitly checkout the triggering tag/ref

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Match the CI workflow version

      - name: Clean install dependencies
        run: rm -rf node_modules && npm ci

      # --- Add Debug Steps ---
      - name: List test files
        run: ls -la server/tests/
      
      - name: Show config test content
        run: cat server/tests/config.test.js

      - name: Show current commit hash
        run: git rev-parse HEAD
      # --- End Debug Steps ---

      - name: Run tests
        # Print file right before test, clear cache, then run tests
        run: |
          echo "--- Content before test --- "
          cat server/tests/config.test.js
          echo "--- End content --- "
          npm test -- --clearCache && npm test # Important: Ensure tests pass before releasing

      # --- Add Docker Steps --- 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64 # Add other platforms if needed
          push: true
          tags: |
            rcourtman/pulse:${{ github.ref_name }} # e.g., rcourtman/pulse:v3.2.2
            rcourtman/pulse:latest # Also tag as latest
      # --- End Docker Steps --- 

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2 # Popular action for creating releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions
        with:
          draft: true # Create the release as a draft initially
          # Optionally, you can generate release notes automatically:
          # generate_release_notes: true
          # Assets can be uploaded later if needed, e.g.:
          # files: |
          #   ./release-*.zip 